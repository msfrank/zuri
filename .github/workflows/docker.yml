name: Build and upload Docker image
on:
  push:
    branches:
      - master

jobs:

  build-linux-arm64-debug:
    name: Build linux ARM64 debug image
    uses: ./.github/workflows/build-platform-image.yml
    with:
      build_type: Debug
      build_runner: ubuntu-24.04-arm
      platform_id: linux/arm64
      base_image: ghcr.io/msfrank/timbre-debug:latest
      tempo_image: ghcr.io/msfrank/tempo-pkgcache-debug:latest
      lyric_image: ghcr.io/msfrank/lyric-pkgcache-debug:latest

  build-linux-x86-64-debug:
    name: Build linux x86_64 debug image
    uses: ./.github/workflows/build-platform-image.yml
    with:
      build_type: Debug
      build_runner: ubuntu-24.04
      platform_id: linux/x86_64
      base_image: ghcr.io/msfrank/timbre-debug:latest
      tempo_image: ghcr.io/msfrank/tempo-pkgcache-debug:latest
      lyric_image: ghcr.io/msfrank/lyric-pkgcache-debug:latest

  build-debug-images:
    name: Build platform and pkgcache debug images
    runs-on: ubuntu-latest
    needs:
      - build-linux-x86-64-debug
      - build-linux-arm64-debug

    env:
      PLATFORM_IMAGE_PATH: ghcr.io/msfrank/zuri-debug
      PKGCACHE_IMAGE_PATH: ghcr.io/msfrank/zuri-pkgcache-debug

    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create platform image
        run: |
          docker buildx imagetools create \
            -t ${{ env.PLATFORM_IMAGE_PATH }} \
            ${{ needs.build-linux-x86-64-debug.outputs.platform_image_path }} \
            ${{ needs.build-linux-arm64-debug.outputs.platform_image_path }}

      - name: Create pkgcache image
        run: |
          docker buildx imagetools create \
            -t ${{ env.PKGCACHE_IMAGE_PATH }} \
            ${{ needs.build-linux-x86-64-debug.outputs.pkgcache_image_path }} \
            ${{ needs.build-linux-arm64-debug.outputs.pkgcache_image_path }}